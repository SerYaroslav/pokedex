{"version":3,"sources":["reducers/index.js","store.js","components/header/index.js","components/header/header.jsx","actions/index.js","components/type-filter/index.js","components/type-filter/type-filter.jsx","components/service-context/index.js","components/hoc/with-pokemon-service.jsx","components/spinner/index.js","components/spinner/spinner.jsx","components/pokemon-list/index.js","components/pokemon-list/pokemon-list.jsx","components/pokemon-card/index.js","components/pokemon-card/pokemon-card.jsx","components/app/app.jsx","components/app/index.js","components/error-indicator/index.js","components/error-indicator/error-indicator.js","components/error-boundry/index.js","components/error-boundry/error-boundry.js","index.js","pokemon-service.js"],"names":["initialState","pokemon","selectedType","pokemonList","filteredList","loading","error","next","pokemonFilter","colection","type","filter","item","types","includes","reducer","state","action","newColection","payload","nextPage","selectedPokemon","find","id","filteredColection","store","createStore","applyMiddleware","thunk","Header","onPokemonSelected","pokemonId","onTypeSelected","fetchColection","pokemonService","url","dispatch","getColection","then","data","catch","err","TypeFilter","connect","bindActionCreators","typesArr","map","setArr","i","length","typeSet","Set","uniqueTypes","value","onChange","e","target","className","key","React","createContext","ServiceProvider","Provider","ServiceConsumer","Consumer","withPokemonService","Wrapped","props","Spinner","PokemonList","useEffect","onClick","name","src","image","alt","toLowerCase","PokemonCard","console","log","join","stats","sort","a","b","statName","statValue","weight","totalMoves","App","ErrorIndicator","ErrorBoundry","hasError","this","setState","children","Component","_apiBase","_firstColectionUrl","getResource","fetch","res","ok","Error","status","json","getPokemon","_transformPokemonData","colectionUrl","getColectionUrls","transformedUrlsData","urls","pokemonsColection","colectionPage","toLoadNext","previous","toLoadPrevious","series","push","getData","_transformColectionData","toCapFirstChar","str","toUpperCase","slice","toFormateStats","strParts","split","abilities","ability","stat","base_stat","height","sprites","front_default","moves","results","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6127ad1d.chunk.js","sourcesContent":["const initialState = {\r\n  pokemon: null,\r\n  selectedType: \"All\",\r\n  pokemonList: [],\r\n  filteredList: [],\r\n  loading: true,\r\n  error:null,\r\n  next:null\r\n};\r\n\r\nconst pokemonFilter = (colection, type) => {\r\n  if(type === \"All\") {\r\n    return colection\r\n  }\r\n  return (\r\n    colection.filter(item => item.types.includes(type))\r\n  )\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"FETCH_COLECTION_REQUEST\":\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        loading: true,\r\n      };\r\n\r\n    case \"FETCH_COLECTION_SUCCESS\":\r\n      const newColection = [...state.pokemonList, ...action.payload.colection]\r\n      const nextPage = action.payload.next;\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        pokemonList: newColection,\r\n        filteredList: newColection,\r\n        next: nextPage,\r\n        selectedType: \"All\"\r\n      };\r\n\r\n    case \"FETCH_COLECTION_FAILURE\":\r\n      return{\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload\r\n      }\r\n\r\n    case \"ON_POKEMON_SELECTED\":\r\n      const selectedPokemon = state.pokemonList.find(\r\n        ({ id }) => id === action.payload\r\n      );\r\n      return {\r\n        ...state,\r\n        pokemon: selectedPokemon,\r\n      };\r\n\r\n    case \"ON_TYPE_SELECTED\":\r\n      const filteredColection = pokemonFilter(state.pokemonList, action.payload);\r\n      return {\r\n        ...state,\r\n        selectedType: action.payload,\r\n        filteredList: filteredColection,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport reducer from './reducers';\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunk));\r\n\r\nexport default store;","import Header from './header';\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nimport './header.scss'\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header>Pokedex</header>\r\n  )\r\n}\r\n\r\nexport default Header;","const colectionRequested = () => {\r\n  return {\r\n    type: \"FETCH_COLECTION_REQUEST\"\r\n  }\r\n}\r\n\r\nconst colectionLoaded = (colection) => {\r\n  return {\r\n    type: \"FETCH_COLECTION_SUCCESS\",\r\n    payload: colection,\r\n  };\r\n};\r\n\r\nconst colectionError = (error) => {\r\n  return {\r\n    type: \"FETCH_COLECTION_FAILURE\",\r\n    payload: error,\r\n  };\r\n};\r\n\r\nconst onPokemonSelected = (pokemonId) => {\r\n  return {\r\n    type: \"ON_POKEMON_SELECTED\",\r\n    payload: pokemonId,\r\n  };\r\n};\r\n\r\nconst onTypeSelected = (type) => {\r\n  return {\r\n    type: \"ON_TYPE_SELECTED\",\r\n    payload: type,\r\n  };\r\n};\r\n\r\n\r\nconst fetchColection = (pokemonService, url)  => {\r\n  return (dispatch) => {\r\n    dispatch(colectionRequested());\r\n    pokemonService\r\n      .getColection(url)\r\n      .then((data) => dispatch(colectionLoaded(data)))\r\n      .catch((err) => dispatch(colectionError(err)));\r\n  }\r\n};\r\n\r\n\r\nexport { onPokemonSelected, fetchColection, onTypeSelected };","import TypeFilter from './type-filter';\r\n\r\nexport default TypeFilter;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nimport { onTypeSelected } from \"../../actions\";\r\n\r\nimport \"./type-filter.scss\"\r\n\r\nconst TypeFilter = ({ selectedType, onTypeSelected, pokemonList }) => {\r\n  \r\n  const typesArr = pokemonList.map((item) => item.types)\r\n  let setArr = []\r\n  for (let i = 0; i < typesArr.length; i++) {\r\n    setArr = [...setArr, ...typesArr[i]];\r\n  }\r\n  const typeSet = new Set(setArr);\r\n\r\n  const uniqueTypes = [...typeSet]\r\n  \r\n  return (\r\n    <label>\r\n      Select the type:\r\n      <select value={selectedType} onChange={(e) => onTypeSelected(e.target.value)} className=\"select_list\">\r\n        <option value=\"All\">All</option>\r\n        {\r\n          uniqueTypes.map(item => <option value={item} key={item}>{item}</option>)\r\n        }\r\n      </select>\r\n    </label>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ selectedType, pokemonList }) => {\r\n  return { selectedType, pokemonList };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) =>\r\n  bindActionCreators(\r\n    {\r\n      onTypeSelected,\r\n    },\r\n    dispatch\r\n  );\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TypeFilter);","import React from \"react\";\r\n\r\nconst {\r\n  Provider: ServiceProvider,\r\n  Consumer: ServiceConsumer\r\n} = React.createContext();\r\n\r\nexport { ServiceProvider, ServiceConsumer };\r\n","import React from \"react\";\r\nimport { ServiceConsumer } from \"../service-context\";\r\n\r\nconst withPokemonService = () => (Wrapped) => {\r\n  return (props) => {\r\n    return (\r\n      <ServiceConsumer>\r\n        {(pokemonService) => {\r\n          return <Wrapped {...props} pokemonService={pokemonService} />;\r\n        }}\r\n      </ServiceConsumer>\r\n    );\r\n  };\r\n};\r\n\r\nexport default withPokemonService;\r\n","import Spinner from \"./spinner\";\r\n\r\nexport default Spinner;\r\n","import React from \"react\";\r\n\r\nimport \"./spinner.scss\";\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"lds-css\">\r\n      <div className=\"lds-double-ring\">\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import PokemonList from './pokemon-list';\r\n\r\nexport default PokemonList;","import React, {useEffect} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nimport { onPokemonSelected, fetchColection } from \"../../actions\";\r\nimport {withPokemonService} from \"../hoc\";\r\n\r\nimport Spiner from '../spinner';\r\n\r\nimport './pokemon-list.scss'\r\n\r\nconst PokemonList = ({filteredList, loading, onPokemonSelected, fetchColection, pokemonService, next}) => {\r\n\r\n  useEffect(() => {\r\n    fetchColection(pokemonService, \"https://pokeapi.co/api/v2/pokemon?offset=0&limit=12\");\r\n  }, [fetchColection, pokemonService]);\r\n\r\n  if(loading){\r\n    return <Spiner/>\r\n  }\r\n\r\n  const toLoadNextPage = () => {\r\n    fetchColection(pokemonService, next);\r\n  }\r\n  \r\n  return (\r\n    <div className=\"list_container\">\r\n      {\r\n        filteredList.map(item => {\r\n          return (\r\n            <div className=\"list_item\" onClick={() => onPokemonSelected(item.id)} key={item.name}>\r\n              <img src={item.image} alt={item.name} />\r\n              <h3>{item.name}</h3>\r\n              <div className=\"type_container\">\r\n                {\r\n                  item.types.map(type => {\r\n                    return (\r\n                      <span className={type.toLowerCase()} key={type}>\r\n                        {type}\r\n                      </span>\r\n                    )\r\n                  })\r\n                }\r\n              </div>\r\n            </div>\r\n          );\r\n        })\r\n      }\r\n      <button className=\"load_btn\" onClick={toLoadNextPage}>Load More</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({ filteredList, loading, next }) => {\r\n  return {\r\n    filteredList,\r\n    loading,\r\n    next,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => \r\n  bindActionCreators(\r\n    {\r\n      onPokemonSelected,\r\n      fetchColection,\r\n    },\r\n    dispatch\r\n);\r\n\r\nexport default withPokemonService()(\r\n  connect(mapStateToProps, mapDispatchToProps)(PokemonList)\r\n);","import PokemonCard from \"./pokemon-card\";\r\n\r\nexport default PokemonCard;","import React from 'react';\r\n\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nimport './pokemon-card.scss'\r\n\r\n\r\nconst PokemonCard = ({pokemon}) => {\r\n\r\n  if(!pokemon) {\r\n    return null\r\n  }\r\n  console.log(pokemon);\r\n  return (\r\n    <div className=\"card_container\">\r\n      <div className=\"img_container\">\r\n        <img src={pokemon.image} alt=\"img\" />\r\n      </div>\r\n      <div className=\"stat_container\">\r\n        <h2>{pokemon.name}</h2>\r\n        <div className=\"stat_row\">\r\n          <div>Type</div>\r\n          <div>{pokemon.types.join(\", \")}</div>\r\n        </div>\r\n        {pokemon.stats\r\n          .sort((a, b) => {\r\n            if (a.statName < b.statName) {\r\n              return -1;\r\n            } else if (a.statName > b.statName) {\r\n              return 1;\r\n            } else {\r\n              return 0;\r\n            }\r\n          })\r\n          .map((item) => {\r\n            return (\r\n              <div className=\"stat_row\" key={item.statName}>\r\n                <div>{item.statName}</div>\r\n                <div>{item.statValue}</div>\r\n              </div>\r\n            );\r\n          })}\r\n        <div className=\"stat_row\">\r\n          <div>Weight</div>\r\n          <div>{pokemon.weight}</div>\r\n        </div>\r\n        <div className=\"stat_row\">\r\n          <div>Total moves</div>\r\n          <div>{pokemon.totalMoves}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nconst mapStateToProps = ({ pokemon }) => {\r\n  return {pokemon}\r\n};\r\n\r\nexport default connect(mapStateToProps, null)( PokemonCard)\r\n\r\n\r\n","import React from 'react';\n\nimport Header from '../header';\nimport TypeFilter from '../type-filter';\nimport PokemonList from '../pokemon-list';\nimport PokemonCard from '../pokemon-card';\n\nimport './app.scss'\n\nfunction App() {\n  return (\n    <main className=\"app_container\">\n      <Header />\n      <TypeFilter/>\n      <div className=\"content_container\">\n        <PokemonList />\n        <PokemonCard />\n      </div>\n    </main>\n  );\n}\n\nexport default App;\n","import App from './app.jsx';\r\n\r\nexport default App;","import ErrorIndicator from \"./error-indicator\";\r\n\r\nexport default ErrorIndicator;\r\n","import React from \"react\";\r\n\r\nconst ErrorIndicator = () => {\r\n  return (\r\n    <div>\r\n      <span>BOOM!</span>\r\n      <span>something has gone terribly wrong</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorIndicator;\r\n","import ErrorBoundry from \"./error-boundry\";\r\n\r\nexport default ErrorBoundry;\r\n","import React, { Component } from \"react\";\r\nimport ErrorIndicator from \"../error-indicator\";\r\n\r\nexport default class ErrorBoundry extends Component {\r\n  state = {\r\n    hasError: false\r\n  };\r\n\r\n  componentDidCatch() {\r\n    this.setState({\r\n      hasError: true\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <ErrorIndicator />;\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport store from './store';\n\nimport App from './components/app';\nimport ErrorBoundry from \"./components/error-boundry\";\n\nimport { ServiceProvider } from './components/service-context';\nimport PokemonService from './pokemon-service';\n\nconst pokemonService = new PokemonService();\n\nReactDOM.render(\n  <Provider store={store}>\n    <ErrorBoundry>\n      <ServiceProvider value={pokemonService}>\n        <App/>\n      </ServiceProvider>\n    </ErrorBoundry>\n  </Provider>,\n   document.getElementById('root')\n);","export default class PokemonService {\r\n  _apiBase = 'https://pokeapi.co/api/v2';\r\n  _firstColectionUrl = `${this._apiBase}/pokemon?offset=0&limit=12`\r\n\r\n  getResource = async (url) => {\r\n    const res = await fetch(`${url}`)\r\n\r\n    if (!res.ok) {\r\n      throw new Error(`Could not fetch ${url} +\r\n      , received ${res.status}`);\r\n    }\r\n\r\n    return await res.json();\r\n  };\r\n\r\n  getPokemon = async (url) => {\r\n    const res = await this.getResource(url);\r\n    return this._transformPokemonData(res);\r\n  } \r\n\r\n  getColection = async (colectionUrl) => {\r\n    const transformedUrlsData = await this.getColectionUrls(colectionUrl);\r\n    const urls = [...transformedUrlsData.pokemonsColection];\r\n\r\n    let colectionPage = {\r\n      colection: [],\r\n      next: transformedUrlsData.toLoadNext,\r\n      previous: transformedUrlsData.toLoadPrevious,\r\n    };\r\n\r\n    const series = async () => {\r\n      for (let i = 0; i < urls.length; i++) {\r\n        colectionPage.colection.push(await this.getPokemon(urls[i]));\r\n      }\r\n      return colectionPage;\r\n    };\r\n    return await series();\r\n  }\r\n\r\n  getColectionUrls = async (colectionUrl) => {\r\n    const getData = await this.getResource(colectionUrl);\r\n    const colection = this._transformColectionData(getData);\r\n   \r\n    return colection;\r\n  }\r\n\r\n  _transformPokemonData = (data) => {\r\n\r\n    const toCapFirstChar = (str) => {\r\n      if (!str) return str;\r\n\r\n      return str[0].toUpperCase() + str.slice(1);\r\n    };\r\n\r\n    const toFormateStats = (str) => {\r\n      if (str.toLowerCase() === \"hp\") {\r\n        return str.toUpperCase();\r\n      } else if (str.includes('-')){\r\n        const strParts = str.split('-');\r\n        \r\n        return `${strParts[0].slice(0, 2).toUpperCase()} ${toCapFirstChar(strParts[1])}`; \r\n      }\r\n      return toCapFirstChar(str)\r\n    }\r\n\r\n    \r\n    const abilities = data.abilities.map((item) => toCapFirstChar(item.ability.name));\r\n\r\n    const types = data.types.map((item) => toCapFirstChar(item.type.name));\r\n\r\n    const stats = data.stats.map(item => {\r\n      return {\r\n        statName: toFormateStats(item.stat.name),\r\n        statValue: item.base_stat,\r\n      };\r\n    });\r\n\r\n    return {\r\n      id: data.id,\r\n      name: toCapFirstChar(data.name),\r\n      height: data.height,\r\n      weight: data.weight,\r\n      stats: stats,\r\n      abilities: abilities,\r\n      image: data.sprites.front_default,\r\n      types: types,\r\n      totalMoves: data.moves.length\r\n    };\r\n  }\r\n\r\n  _transformColectionData = (data) => {\r\n    const urls = data.results.map(item=>{\r\n      const { url } = item;\r\n      return url;\r\n    })\r\n    return {\r\n      toLoadNext: data.next,\r\n      toLoadPrevious: data.previous,\r\n      pokemonsColection: urls,\r\n    };\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n"],"sourceRoot":""}